---
name: optom-resources

services:
  client:
    build:
      context: ./client
      dockerfile: ./Dockerfile
    container_name: optom-resources_client
    env_file: .env
    ports:
      - "${PUBLIC_CLIENT_PORT:-5173}:5173"
    restart: unless-stopped
    volumes:
      - ./client:/code
      - client_node_modules:/code/node_modules/
  cms:
    build:
      context: ./cms
      dockerfile: ./.docker/dev/Dockerfile
    container_name: optom-resources_cms
    depends_on:
      - db
    env_file: .env
    ports:
      - "${PUBLIC_CMS_PORT:-1337}:1337"
    restart: unless-stopped
    volumes:
      - ./cms:/code
      - cms_node_modules:/code/node_modules

  db:
    container_name: optom-resources_db
    env_file: .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
    image: postgres:12.0-alpine
    platform: linux/amd64
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data/

version: "3.8"

volumes:
  cms_node_modules:
  client_node_modules:
  db-data:
